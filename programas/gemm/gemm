	.file	"gemm.c"
	.text
	.type	init_array, @function
init_array:
.LFB5:
	.cfi_startproc
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register 6
	movl	%edi, -20(%rbp)
	movl	%esi, -24(%rbp)
	movl	%edx, -28(%rbp)
	movq	%rcx, -40(%rbp)
	movq	%r8, -48(%rbp)
	movq	%r9, -56(%rbp)
	movq	-40(%rbp), %rax
	movsd	.LC0(%rip), %xmm0
	movsd	%xmm0, (%rax)
	movq	-48(%rbp), %rax
	movsd	.LC1(%rip), %xmm0
	movsd	%xmm0, (%rax)
	movl	$0, -8(%rbp)
	jmp	.L2
.L5:
	movl	$0, -4(%rbp)
	jmp	.L3
.L4:
	movl	-8(%rbp), %eax
	imull	-4(%rbp), %eax
	addl	$1, %eax
	cltd
	idivl	-20(%rbp)
	movl	%edx, %eax
	cvtsi2sd	%eax, %xmm0
	cvtsi2sd	-20(%rbp), %xmm1
	movl	-8(%rbp), %eax
	cltq
	imulq	$18400, %rax, %rdx
	movq	-56(%rbp), %rax
	addq	%rax, %rdx
	divsd	%xmm1, %xmm0
	movl	-4(%rbp), %eax
	cltq
	movsd	%xmm0, (%rdx,%rax,8)
	addl	$1, -4(%rbp)
.L3:
	movl	-4(%rbp), %eax
	cmpl	-24(%rbp), %eax
	jl	.L4
	addl	$1, -8(%rbp)
.L2:
	movl	-8(%rbp), %eax
	cmpl	-20(%rbp), %eax
	jl	.L5
	movl	$0, -8(%rbp)
	jmp	.L6
.L9:
	movl	$0, -4(%rbp)
	jmp	.L7
.L8:
	movl	-4(%rbp), %eax
	addl	$1, %eax
	imull	-8(%rbp), %eax
	cltd
	idivl	-28(%rbp)
	movl	%edx, %eax
	cvtsi2sd	%eax, %xmm0
	cvtsi2sd	-28(%rbp), %xmm1
	movl	-8(%rbp), %eax
	cltq
	imulq	$20800, %rax, %rdx
	movq	16(%rbp), %rax
	addq	%rax, %rdx
	divsd	%xmm1, %xmm0
	movl	-4(%rbp), %eax
	cltq
	movsd	%xmm0, (%rdx,%rax,8)
	addl	$1, -4(%rbp)
.L7:
	movl	-4(%rbp), %eax
	cmpl	-28(%rbp), %eax
	jl	.L8
	addl	$1, -8(%rbp)
.L6:
	movl	-8(%rbp), %eax
	cmpl	-20(%rbp), %eax
	jl	.L9
	movl	$0, -8(%rbp)
	jmp	.L10
.L13:
	movl	$0, -4(%rbp)
	jmp	.L11
.L12:
	movl	-4(%rbp), %eax
	addl	$2, %eax
	imull	-8(%rbp), %eax
	cltd
	idivl	-24(%rbp)
	movl	%edx, %eax
	cvtsi2sd	%eax, %xmm0
	cvtsi2sd	-24(%rbp), %xmm1
	movl	-8(%rbp), %eax
	cltq
	imulq	$18400, %rax, %rdx
	movq	24(%rbp), %rax
	addq	%rax, %rdx
	divsd	%xmm1, %xmm0
	movl	-4(%rbp), %eax
	cltq
	movsd	%xmm0, (%rdx,%rax,8)
	addl	$1, -4(%rbp)
.L11:
	movl	-4(%rbp), %eax
	cmpl	-24(%rbp), %eax
	jl	.L12
	addl	$1, -8(%rbp)
.L10:
	movl	-8(%rbp), %eax
	cmpl	-28(%rbp), %eax
	jl	.L13
	nop
	popq	%rbp
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE5:
	.size	init_array, .-init_array
	.section	.rodata
.LC2:
	.string	"==BEGIN DUMP_ARRAYS==\n"
.LC3:
	.string	"C"
.LC4:
	.string	"begin dump: %s"
.LC5:
	.string	"%0.2lf "
.LC6:
	.string	"\nend   dump: %s\n"
.LC7:
	.string	"==END   DUMP_ARRAYS==\n"
	.text
	.type	print_array, @function
print_array:
.LFB6:
	.cfi_startproc
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register 6
	subq	$48, %rsp
	movl	%edi, -20(%rbp)
	movl	%esi, -24(%rbp)
	movq	%rdx, -32(%rbp)
	movq	stderr(%rip), %rax
	movq	%rax, %rcx
	movl	$22, %edx
	movl	$1, %esi
	leaq	.LC2(%rip), %rdi
	call	fwrite@PLT
	movq	stderr(%rip), %rax
	leaq	.LC3(%rip), %rdx
	leaq	.LC4(%rip), %rsi
	movq	%rax, %rdi
	movl	$0, %eax
	call	fprintf@PLT
	movl	$0, -8(%rbp)
	jmp	.L15
.L19:
	movl	$0, -4(%rbp)
	jmp	.L16
.L18:
	movl	-8(%rbp), %eax
	imull	-20(%rbp), %eax
	movl	%eax, %edx
	movl	-4(%rbp), %eax
	leal	(%rdx,%rax), %ecx
	movl	$1717986919, %edx
	movl	%ecx, %eax
	imull	%edx
	sarl	$3, %edx
	movl	%ecx, %eax
	sarl	$31, %eax
	subl	%eax, %edx
	movl	%edx, %eax
	sall	$2, %eax
	addl	%edx, %eax
	sall	$2, %eax
	subl	%eax, %ecx
	movl	%ecx, %edx
	testl	%edx, %edx
	jne	.L17
	movq	stderr(%rip), %rax
	movq	%rax, %rsi
	movl	$10, %edi
	call	fputc@PLT
.L17:
	movl	-8(%rbp), %eax
	cltq
	imulq	$18400, %rax, %rdx
	movq	-32(%rbp), %rax
	addq	%rax, %rdx
	movl	-4(%rbp), %eax
	cltq
	movq	(%rdx,%rax,8), %rdx
	movq	stderr(%rip), %rax
	movq	%rdx, -40(%rbp)
	movsd	-40(%rbp), %xmm0
	leaq	.LC5(%rip), %rsi
	movq	%rax, %rdi
	movl	$1, %eax
	call	fprintf@PLT
	addl	$1, -4(%rbp)
.L16:
	movl	-4(%rbp), %eax
	cmpl	-24(%rbp), %eax
	jl	.L18
	addl	$1, -8(%rbp)
.L15:
	movl	-8(%rbp), %eax
	cmpl	-20(%rbp), %eax
	jl	.L19
	movq	stderr(%rip), %rax
	leaq	.LC3(%rip), %rdx
	leaq	.LC6(%rip), %rsi
	movq	%rax, %rdi
	movl	$0, %eax
	call	fprintf@PLT
	movq	stderr(%rip), %rax
	movq	%rax, %rcx
	movl	$22, %edx
	movl	$1, %esi
	leaq	.LC7(%rip), %rdi
	call	fwrite@PLT
	nop
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE6:
	.size	print_array, .-print_array
	.type	kernel_gemm, @function
kernel_gemm:
.LFB7:
	.cfi_startproc
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register 6
	movl	%edi, -20(%rbp)
	movl	%esi, -24(%rbp)
	movl	%edx, -28(%rbp)
	movsd	%xmm0, -40(%rbp)
	movsd	%xmm1, -48(%rbp)
	movq	%rcx, -56(%rbp)
	movq	%r8, -64(%rbp)
	movq	%r9, -72(%rbp)
	movl	$0, -12(%rbp)
	jmp	.L21
.L28:
	movl	$0, -8(%rbp)
	jmp	.L22
.L23:
	movl	-12(%rbp), %eax
	cltq
	imulq	$18400, %rax, %rdx
	movq	-56(%rbp), %rax
	addq	%rax, %rdx
	movl	-8(%rbp), %eax
	cltq
	movsd	(%rdx,%rax,8), %xmm0
	movl	-12(%rbp), %eax
	cltq
	imulq	$18400, %rax, %rdx
	movq	-56(%rbp), %rax
	addq	%rax, %rdx
	mulsd	-48(%rbp), %xmm0
	movl	-8(%rbp), %eax
	cltq
	movsd	%xmm0, (%rdx,%rax,8)
	addl	$1, -8(%rbp)
.L22:
	movl	-8(%rbp), %eax
	cmpl	-24(%rbp), %eax
	jl	.L23
	movl	$0, -4(%rbp)
	jmp	.L24
.L27:
	movl	$0, -8(%rbp)
	jmp	.L25
.L26:
	movl	-12(%rbp), %eax
	cltq
	imulq	$18400, %rax, %rdx
	movq	-56(%rbp), %rax
	addq	%rax, %rdx
	movl	-8(%rbp), %eax
	cltq
	movsd	(%rdx,%rax,8), %xmm1
	movl	-12(%rbp), %eax
	cltq
	imulq	$20800, %rax, %rdx
	movq	-64(%rbp), %rax
	addq	%rax, %rdx
	movl	-4(%rbp), %eax
	cltq
	movsd	(%rdx,%rax,8), %xmm0
	mulsd	-40(%rbp), %xmm0
	movl	-4(%rbp), %eax
	cltq
	imulq	$18400, %rax, %rdx
	movq	-72(%rbp), %rax
	addq	%rax, %rdx
	movl	-8(%rbp), %eax
	cltq
	movsd	(%rdx,%rax,8), %xmm2
	mulsd	%xmm2, %xmm0
	movl	-12(%rbp), %eax
	cltq
	imulq	$18400, %rax, %rdx
	movq	-56(%rbp), %rax
	addq	%rax, %rdx
	addsd	%xmm1, %xmm0
	movl	-8(%rbp), %eax
	cltq
	movsd	%xmm0, (%rdx,%rax,8)
	addl	$1, -8(%rbp)
.L25:
	movl	-8(%rbp), %eax
	cmpl	-24(%rbp), %eax
	jl	.L26
	addl	$1, -4(%rbp)
.L24:
	movl	-4(%rbp), %eax
	cmpl	-28(%rbp), %eax
	jl	.L27
	addl	$1, -12(%rbp)
.L21:
	movl	-12(%rbp), %eax
	cmpl	-20(%rbp), %eax
	jl	.L28
	nop
	popq	%rbp
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE7:
	.size	kernel_gemm, .-kernel_gemm
	.globl	main
	.type	main, @function
main:
.LFB8:
	.cfi_startproc
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register 6
	subq	$96, %rsp
	movl	%edi, -68(%rbp)
	movq	%rsi, -80(%rbp)
	movq	%fs:40, %rax
	movq	%rax, -8(%rbp)
	xorl	%eax, %eax
	movl	$2000, -60(%rbp)
	movl	$2300, -56(%rbp)
	movl	$2600, -52(%rbp)
	movl	$8, %esi
	movl	$4600000, %edi
	call	polybench_alloc_data@PLT
	movq	%rax, -32(%rbp)
	movl	$8, %esi
	movl	$5200000, %edi
	call	polybench_alloc_data@PLT
	movq	%rax, -24(%rbp)
	movl	$8, %esi
	movl	$5980000, %edi
	call	polybench_alloc_data@PLT
	movq	%rax, -16(%rbp)
	movq	-32(%rbp), %r8
	leaq	-40(%rbp), %rdi
	leaq	-48(%rbp), %rcx
	movl	-52(%rbp), %edx
	movl	-56(%rbp), %esi
	movl	-60(%rbp), %eax
	pushq	-16(%rbp)
	pushq	-24(%rbp)
	movq	%r8, %r9
	movq	%rdi, %r8
	movl	%eax, %edi
	call	init_array
	addq	$16, %rsp
	movsd	-40(%rbp), %xmm0
	movq	-48(%rbp), %rdi
	movq	-16(%rbp), %r9
	movq	-24(%rbp), %r8
	movq	-32(%rbp), %rcx
	movl	-52(%rbp), %edx
	movl	-56(%rbp), %esi
	movl	-60(%rbp), %eax
	movapd	%xmm0, %xmm1
	movq	%rdi, -88(%rbp)
	movsd	-88(%rbp), %xmm0
	movl	%eax, %edi
	call	kernel_gemm
	movq	-32(%rbp), %rdx
	movl	-56(%rbp), %ecx
	movl	-60(%rbp), %eax
	movl	%ecx, %esi
	movl	%eax, %edi
	call	print_array
	movq	-32(%rbp), %rax
	movq	%rax, %rdi
	call	free@PLT
	movq	-24(%rbp), %rax
	movq	%rax, %rdi
	call	free@PLT
	movq	-16(%rbp), %rax
	movq	%rax, %rdi
	call	free@PLT
	movl	$0, %eax
	movq	-8(%rbp), %rcx
	xorq	%fs:40, %rcx
	je	.L31
	call	__stack_chk_fail@PLT
.L31:
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE8:
	.size	main, .-main
	.section	.rodata
	.align 8
.LC0:
	.long	0
	.long	1073217536
	.align 8
.LC1:
	.long	858993459
	.long	1072902963
	.ident	"GCC: (Ubuntu 7.4.0-1ubuntu1~18.04.1) 7.4.0"
	.section	.note.GNU-stack,"",@progbits
